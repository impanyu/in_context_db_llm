{
    "drop_database": ["DROP DATABASE IF EXISTS test;"],
    "create_database": ["CREATE DATABASE IF NOT EXISTS test;"],
    "use_database": ["USE test;"],
    "drop_tables":[
        "DROP TABLE IF EXISTS Users;",
        "DROP TABLE IF EXISTS Posts;",
        "DROP TABLE IF EXISTS Comments;"
    ],
    "create_tables":[
        "CREATE TABLE Users (UserID INT NOT NULL AUTO_INCREMENT,Username VARCHAR(255) NOT NULL,Email VARCHAR(255) NOT NULL,PasswordHash VARCHAR(255) NOT NULL,CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,PRIMARY KEY (UserID));",
        "CREATE TABLE Posts (PostID INT NOT NULL AUTO_INCREMENT, UserID INT NOT NULL, Title VARCHAR(255) NOT NULL, Content TEXT NOT NULL, CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (PostID), FOREIGN KEY (UserID) REFERENCES Users(UserID));",
        "CREATE TABLE Comments (CommentID INT NOT NULL AUTO_INCREMENT, PostID INT NOT NULL, UserID INT NOT NULL, CommentText TEXT NOT NULL, CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP, PRIMARY KEY (CommentID), FOREIGN KEY (PostID) REFERENCES Posts(PostID), FOREIGN KEY (UserID) REFERENCES Users(UserID));"
    ],
    "insert":[
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('john_doe', 'john@example.com', 'hashed_password_1');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('jane_doe', 'jane@example.com', 'hashed_password_2');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('alice_smith', 'alice@example.com', 'hashed_password_3');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('bob_jones', 'bob@example.com', 'hashed_password_4');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('charlie_brown', 'charlie@example.com', 'hashed_password_5');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('dave_clark', 'dave@example.com', 'hashed_password_6');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('eve_white', 'eve@example.com', 'hashed_password_7');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('frank_black', 'frank@example.com', 'hashed_password_8');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('grace_green', 'grace@example.com', 'hashed_password_9');",
        "INSERT INTO Users (Username, Email, PasswordHash) VALUES ('hank_blue', 'hank@example.com', 'hashed_password_10');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (1, 'First Post', 'This is the content of the first post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (2, 'Second Post', 'This is the content of the second post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (3, 'Third Post', 'This is the content of the third post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (4, 'Fourth Post', 'This is the content of the fourth post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (5, 'Fifth Post', 'This is the content of the fifth post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (6, 'Sixth Post', 'This is the content of the sixth post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (7, 'Seventh Post', 'This is the content of the seventh post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (8, 'Eighth Post', 'This is the content of the eighth post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (9, 'Ninth Post', 'This is the content of the ninth post.');",
        "INSERT INTO Posts (UserID, Title, Content) VALUES (10, 'Tenth Post', 'This is the content of the tenth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (1, 2, 'This is a comment on the first post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (2, 3, 'This is a comment on the second post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (3, 4, 'This is a comment on the third post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (4, 5, 'This is a comment on the fourth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (5, 6, 'This is a comment on the fifth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (6, 7, 'This is a comment on the sixth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (7, 8, 'This is a comment on the seventh post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (8, 9, 'This is a comment on the eighth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (9, 10, 'This is a comment on the ninth post.');",
        "INSERT INTO Comments (PostID, UserID, CommentText) VALUES (10, 1, 'This is a comment on the tenth post.');"
    ],
    "delete":[
        "DELETE FROM Users WHERE UserID = 1;",
        "DELETE FROM Users WHERE Username = 'johndoe';",
        "DELETE FROM Users WHERE Email = 'example@example.com';",
        "DELETE FROM Users WHERE CreatedAt < '2023-01-01';",
        "DELETE FROM Users WHERE Username = 'janedoe' AND Email = 'janedoe@example.com';",
        "DELETE FROM Users WHERE CreatedAt > '2024-01-01' AND UserID > 10;",
        "DELETE FROM Users WHERE Username = 'alice' OR Username = 'bob';",
        "DELETE FROM Users WHERE Email LIKE '%example.com';",
        "DELETE FROM Users WHERE UserID BETWEEN 5 AND 10;",
        "DELETE FROM Users WHERE Username = 'admin' AND CreatedAt > '2023-06-01';",
        "DELETE FROM Posts WHERE PostID = 100;",
        "DELETE FROM Posts WHERE UserID = 1;",
        "DELETE FROM Posts WHERE Title = 'Hello World';",
        "DELETE FROM Posts WHERE CreatedAt < '2023-01-01';",
        "DELETE FROM Posts WHERE Title LIKE '%announcement%';",
        "DELETE FROM Posts WHERE UserID = 2 AND CreatedAt < '2023-06-01';",
        "DELETE FROM Posts WHERE PostID > 50 AND PostID < 100;",
        "DELETE FROM Posts WHERE UserID = 3 OR Title = 'Test Post';",
        "DELETE FROM Posts WHERE CreatedAt BETWEEN '2023-01-01' AND '2023-12-31';",
        "DELETE FROM Posts WHERE UserID = 5 AND Title = 'Update';",
        "DELETE FROM Comments WHERE CommentID = 500;",
        "DELETE FROM Comments WHERE PostID = 100;",
        "DELETE FROM Comments WHERE UserID = 1;",
        "DELETE FROM Comments WHERE CommentText LIKE '%spam%';",
        "DELETE FROM Comments WHERE CreatedAt < '2023-01-01' AND UserID = 2;",
        "DELETE FROM Comments WHERE PostID = 200 AND UserID = 3;",
        "DELETE FROM Comments WHERE CommentID > 100 AND CommentID < 200;",
        "DELETE FROM Comments WHERE UserID = 4 OR PostID = 300;",
        "DELETE FROM Comments WHERE CreatedAt > '2023-06-01' AND UserID = 5;",
        "DELETE FROM Comments WHERE CommentText = 'Test comment' AND CreatedAt < '2023-07-01';"
    ],
    "update":[
        "UPDATE Users SET Username = 'new_username' WHERE UserID = 5;",
        "UPDATE Users SET Email = 'new_email@example.com' WHERE UserID = 3 AND CreatedAt > '2023-01-01';",
        "UPDATE Users SET PasswordHash = 'new_hash' WHERE Username = 'john_doe';",
        "UPDATE Users SET Username = 'updated_name' WHERE UserID = 2 OR Email = 'old_email@example.com';",
        "UPDATE Users SET CreatedAt = '2023-08-01' WHERE UserID = 1;",
        "UPDATE Users SET Email = 'another_email@example.com', PasswordHash = 'another_hash' WHERE UserID = 6;",
        "UPDATE Users SET Username = 'another_user' WHERE Email = 'another_user@example.com' AND CreatedAt < '2023-01-01';",
        "UPDATE Users SET PasswordHash = 'strong_hash' WHERE Username = 'jane_doe' AND CreatedAt BETWEEN '2023-01-01' AND '2023-12-31';",
        "UPDATE Users SET Email = 'user_email_update@example.com' WHERE UserID = 7 AND CreatedAt IS NOT NULL;",
        "UPDATE Users SET Username = 'name_updated', Email = 'email_updated@example.com' WHERE UserID = 4 OR PasswordHash = 'old_hash';",
        "UPDATE Posts SET Title = 'New Title' WHERE PostID = 10;",
        "UPDATE Posts SET Content = 'Updated content for the post.' WHERE PostID = 8 AND UserID = 2;",
        "UPDATE Posts SET CreatedAt = '2023-08-01' WHERE Title = 'Old Title';",
        "UPDATE Posts SET Title = 'Another Title Update' WHERE UserID = 5 OR CreatedAt > '2023-07-01';",
        "UPDATE Posts SET Title = 'Updated Title', Content = 'New content' WHERE PostID = 6;",
        "UPDATE Posts SET Content = 'Modified content' WHERE PostID = 4 AND UserID = 3;",
        "UPDATE Posts SET Title = 'Modified Title' WHERE UserID = 2 AND CreatedAt < '2023-01-01';",
        "UPDATE Posts SET CreatedAt = '2023-07-15' WHERE PostID = 7 OR Title = 'Old Post Title';",
        "UPDATE Posts SET Title = 'New Post Title' WHERE PostID = 1;",
        "UPDATE Posts SET Content = 'Final content update' WHERE PostID = 9 AND UserID = 4;",
        "UPDATE Comments SET CommentText = 'Updated comment text.' WHERE CommentID = 3;",
        "UPDATE Comments SET CreatedAt = '2023-08-01' WHERE CommentID = 5 AND UserID = 2;",
        "UPDATE Comments SET CommentText = 'Another comment update' WHERE PostID = 7;",
        "UPDATE Comments SET CommentText = 'Final comment update', CreatedAt = '2023-07-01' WHERE CommentID = 2 AND PostID = 4;",
        "UPDATE Comments SET CommentText = 'Modified text' WHERE CommentID = 9 OR UserID = 6;",
        "UPDATE Comments SET CreatedAt = '2023-07-15' WHERE CommentID = 8;",
        "UPDATE Comments SET CommentText = 'Text changed again' WHERE CommentID = 1 AND PostID = 10;",
        "UPDATE Comments SET CreatedAt = '2023-06-30' WHERE UserID = 3 OR PostID = 5;",
        "UPDATE Comments SET CommentText = 'Last comment update' WHERE CommentID = 7;",
        "UPDATE Comments SET CreatedAt = '2023-07-20', CommentText = 'Final change' WHERE CommentID = 6 AND UserID = 4;"
    ],  
        "select": {
            "no_filtering": [
                "SELECT UserID FROM Users;",
                "SELECT PostID FROM Posts;",
                "SELECT CommentID FROM Comments;",
                "SELECT Username FROM Users;"
            ],
            "single_filtering": [
                "SELECT UserID FROM Users WHERE Username = 'john_doe';",
                "SELECT PostID FROM Posts WHERE UserID = 1;",
                "SELECT CommentID FROM Comments WHERE PostID = 5;",
                "SELECT UserID FROM Users WHERE CreatedAt > '2024-01-01';"
            ],
            "double_filtering": [
                "SELECT UserID FROM Users WHERE Username = 'john_doe' AND Email = 'john@example.com';",
                "SELECT PostID FROM Posts WHERE UserID = 1 AND CreatedAt < '2024-01-01';",
                "SELECT CommentID FROM Comments WHERE PostID = 5 OR UserID = 2;",
                "SELECT PostID FROM Posts WHERE Title LIKE '%SQL%' AND CreatedAt > '2023-01-01';"
            ],
            "triple_filtering": [
                "SELECT UserID FROM Users WHERE Username = 'john_doe' AND Email = 'john@example.com' AND CreatedAt > '2023-01-01';",
                "SELECT PostID FROM Posts WHERE UserID = 1 AND Title LIKE '%Python%' AND CreatedAt > '2023-01-01';",
                "SELECT CommentID FROM Comments WHERE PostID = 5 AND UserID = 2 AND CreatedAt > '2023-01-01';",
                "SELECT CommentID FROM Comments WHERE CommentText LIKE '%helpful%' OR UserID = 3 AND CreatedAt < '2024-01-01';"
            ],
            "range_filtering": [
                "SELECT UserID FROM Users WHERE CreatedAt BETWEEN '2023-01-01' AND '2024-01-01';",
                "SELECT PostID FROM Posts WHERE CreatedAt BETWEEN '2023-06-01' AND '2024-06-01';",
                "SELECT CommentID FROM Comments WHERE CreatedAt BETWEEN '2023-01-01' AND '2024-01-01';",
                "SELECT PostID FROM Posts WHERE PostID BETWEEN 1 AND 100;"
            ],
            "ranking": [
                "SELECT UserID FROM Users ORDER BY CreatedAt DESC;",
                "SELECT PostID FROM Posts ORDER BY CreatedAt ASC;",
                "SELECT CommentID FROM Comments ORDER BY CreatedAt DESC;",
                "SELECT UserID FROM Users ORDER BY UserID DESC;"
            ],
            "count": [
                "SELECT COUNT(UserID) FROM Users;",
                "SELECT COUNT(PostID) FROM Posts;",
                "SELECT COUNT(CommentID) FROM Comments;",
                "SELECT COUNT(UserID) FROM Users WHERE CreatedAt > '2024-01-01';"
            ],
            "single_table": [
                "SELECT UserID FROM Users;",
                "SELECT PostID FROM Posts WHERE UserID = 1;",
                "SELECT CommentID FROM Comments WHERE PostID = 5;",
                "SELECT Username FROM Users WHERE Email LIKE '%example.com%';"
            ],
            "double_table": [
                "SELECT Posts.PostID FROM Posts JOIN Users ON Posts.UserID = Users.UserID WHERE Users.Username = 'john_doe';",
                "SELECT Comments.CommentID FROM Comments JOIN Posts ON Comments.PostID = Posts.PostID WHERE Posts.UserID = 1;",
                "SELECT Comments.CommentID FROM Comments JOIN Users ON Comments.UserID = Users.UserID WHERE Users.Email = 'john@example.com';",
                "SELECT Posts.PostID FROM Posts JOIN Users ON Posts.UserID = Users.UserID ORDER BY Users.CreatedAt DESC;"
            ],
            "three_table": [
                "SELECT Comments.CommentID FROM Comments JOIN Posts ON Comments.PostID = Posts.PostID JOIN Users ON Posts.UserID = Users.UserID WHERE Users.Username = 'john_doe';",
                "SELECT Comments.CommentID FROM Comments JOIN Posts ON Comments.PostID = Posts.PostID JOIN Users ON Comments.UserID = Users.UserID WHERE Posts.Title LIKE '%Python%';",
                "SELECT Posts.PostID FROM Posts JOIN Users ON Posts.UserID = Users.UserID JOIN Comments ON Posts.PostID = Comments.PostID WHERE Users.Email LIKE '%example.com%';",
                "SELECT Posts.PostID FROM Posts JOIN Users ON Posts.UserID = Users.UserID JOIN Comments ON Posts.PostID = Comments.PostID WHERE Comments.CommentText LIKE '%helpful%';"
            ]
        }
    
    

}